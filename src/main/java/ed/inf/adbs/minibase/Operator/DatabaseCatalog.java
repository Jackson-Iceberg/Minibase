package ed.inf.adbs.minibase.Operator;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
/**
 * The DatabaseCatalog class is a container for storing information about the database schema,
 * the tuple list, and the database directory path. It provides methods for accessing and
 * modifying the schema, tuple list, and database directory.
 * @author jackson-zhou
 */

public class DatabaseCatalog {
	// A HashMap containing the database catalog schema mapping
	HashMap<String, List<String>> dbCatalogType;

	// A List containing the tuples generated by query execution
	List<Tuple> tupleList;

	// A String containing the path of the database directory
	String databaseDir;

	/**
	 * Constructs a new DatabaseCatalog object with the given schema mapping, tuple list,
	 * and database directory path.
	 *
	 * @param dbCatalogType The HashMap containing the database catalog schema mapping.
	 * @param tupleList The List containing the tuples generated by query execution.
	 * @param databaseDir The String containing the path of the database directory.
	 */
	public DatabaseCatalog(HashMap<String, List<String>> dbCatalogType, List<Tuple> tupleList, String databaseDir) {
		this.dbCatalogType = dbCatalogType;
		this.tupleList = tupleList;
		this.databaseDir = databaseDir;
	}

	/**
	 * Returns the database catalog schema mapping.
	 *
	 * @return The HashMap containing the database catalog schema mapping.
	 */
	public HashMap<String, List<String>> getDbCatalogType() {
		return dbCatalogType;
	}

	/**
	 * Returns the database directory path.
	 *
	 * @return The String containing the path of the database directory.
	 */
	public String getDatabaseDir() {
		return databaseDir;
	}

	/**
	 * Returns the tuple list.
	 *
	 * @return The List containing the tuples generated by query execution.
	 */
	public List<Tuple> getTupleList() {
		return tupleList;
	}

	/**
	 * Adds a tuple to the tuple list.
	 *
	 * @param tuple The Tuple object to be added to the tuple list.
	 */
	public void addTupleList(Tuple tuple) {
		tupleList.add(tuple);
	}

	/**
	 * Replaces the current tuple list with the given tuple list.
	 *
	 * @param tupleList The List of Tuple objects to replace the current tuple list.
	 */
	public void setTupleList(List<Tuple> tupleList) {
		this.tupleList = tupleList;
	}
}

